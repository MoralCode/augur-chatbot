{
  "commits": {
    "columns": [
      "cmt_id",
      "repo_id",
      "cmt_commit_hash",
      "cmt_author_name",
      "cmt_author_raw_email",
      "cmt_author_email",
      "cmt_author_date",
      "cmt_author_affiliation",
      "cmt_committer_name",
      "cmt_committer_raw_email",
      "cmt_committer_email",
      "cmt_committer_date",
      "cmt_committer_affiliation",
      "cmt_added",
      "cmt_removed",
      "cmt_whitespace",
      "cmt_filename",
      "cmt_date_attempted",
      "cmt_ght_committer_id",
      "cmt_ght_committed_at",
      "cmt_committer_timestamp",
      "cmt_author_timestamp",
      "cmt_author_platform_username",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cmt_ght_author_id"
    ],
    "description": "Use to track commits per author, affiliation, and date."
  },
  "contributor_affiliations": {
    "columns": [
      "ca_id",
      "ca_domain",
      "ca_start_date",
      "ca_last_used",
      "ca_affiliation",
      "ca_active",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ],
    "description": "Links contributors to their companies over time. Use to understand corporate participation and affiliation-based queries."
  },
  "contributors": {
    "columns": [
      "cntrb_login",
      "cntrb_email",
      "cntrb_full_name",
      "cntrb_company",
      "cntrb_created_at",
      "cntrb_type",
      "cntrb_fake",
      "cntrb_deleted",
      "cntrb_long",
      "cntrb_lat",
      "cntrb_country_code",
      "cntrb_state",
      "cntrb_city",
      "cntrb_location",
      "cntrb_canonical",
      "cntrb_last_used",
      "gh_user_id",
      "gh_login",
      "gh_url",
      "gh_html_url",
      "gh_node_id",
      "gh_avatar_url",
      "gh_gravatar_id",
      "gh_followers_url",
      "gh_following_url",
      "gh_gists_url",
      "gh_starred_url",
      "gh_subscriptions_url",
      "gh_organizations_url",
      "gh_repos_url",
      "gh_events_url",
      "gh_received_events_url",
      "gh_type",
      "gh_site_admin",
      "gl_web_url",
      "gl_avatar_url",
      "gl_state",
      "gl_username",
      "gl_full_name",
      "gl_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ],
    "description": "Holds contributor identities, GitHub and GitLab profiles, and location data. Useful for affiliation, geography, and contributor activity queries."
  },
  "issue_assignees": {
    "columns": [
      "issue_assignee_id",
      "issue_id",
      "repo_id",
      "issue_assignee_src_id",
      "issue_assignee_src_node",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ]
  },
  "issue_events": {
    "columns": [
      "event_id",
      "issue_id",
      "repo_id",
      "action",
      "action_commit_hash",
      "created_at",
      "node_id",
      "node_url",
      "platform_id",
      "issue_event_src_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ],
    "description": "Captures changes to issues (opened, closed, reopened) over time. Useful for measuring responsiveness and activity patterns."
  },
  "issues": {
    "columns": [
      "issue_id",
      "repo_id",
      "pull_request",
      "pull_request_id",
      "created_at",
      "issue_title",
      "issue_body",
      "comment_count",
      "updated_at",
      "closed_at",
      "due_on",
      "repository_url",
      "issue_url",
      "labels_url",
      "comments_url",
      "events_url",
      "html_url",
      "issue_state",
      "issue_node_id",
      "gh_issue_number",
      "gh_issue_id",
      "gh_user_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "reporter_id",
      "cntrb_id"
    ],
    "description": "Tracks issue content opened in repos, including title, body, timestamps, and whether they are linked to pull requests. Use for engagement analysis."
  },
  "message": {
    "columns": [
      "msg_id",
      "rgls_id",
      "platform_msg_id",
      "platform_node_id",
      "repo_id",
      "msg_text",
      "msg_timestamp",
      "msg_sender_email",
      "msg_header",
      "pltfrm_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ]
  },
  "pull_request_assignees": {
    "columns": [
      "pr_assignee_map_id",
      "pull_request_id",
      "repo_id",
      "pr_assignee_src_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "contrib_id"
    ]
  },
  "pull_request_commits": {
    "columns": [
      "pr_cmt_id",
      "pull_request_id",
      "repo_id",
      "pr_cmt_sha",
      "pr_cmt_node_id",
      "pr_cmt_message",
      "pr_cmt_comments_url",
      "pr_cmt_timestamp",
      "pr_cmt_author_email",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "pr_cmt_author_cntrb_id"
    ]
  },
  "pull_request_events": {
    "columns": [
      "pr_event_id",
      "pull_request_id",
      "repo_id",
      "action",
      "action_commit_hash",
      "created_at",
      "issue_event_src_id",
      "node_id",
      "node_url",
      "platform_id",
      "pr_platform_event_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ]
  },
  "pull_request_files": {
    "columns": [
      "pr_file_id",
      "pull_request_id",
      "repo_id",
      "pr_file_additions",
      "pr_file_deletions",
      "pr_file_path",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ]
  },
  "pull_request_labels": {
    "columns": [
      "pr_label_id",
      "pull_request_id",
      "repo_id",
      "pr_src_id",
      "pr_src_node_id",
      "pr_src_url",
      "pr_src_description",
      "pr_src_color",
      "pr_src_default_bool",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ]
  },
  "pull_request_message_ref": {
    "columns": [
      "pr_msg_ref_id",
      "pull_request_id",
      "repo_id",
      "msg_id",
      "pr_message_ref_src_comment_id",
      "pr_message_ref_src_node_id",
      "pr_issue_url",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ]
  },
  "pull_request_reviewers": {
    "columns": [
      "pr_reviewer_map_id",
      "pull_request_id",
      "pr_source_id",
      "repo_id",
      "pr_reviewer_src_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ]
  },
  "pull_request_reviews": {
    "columns": [
      "pr_review_id",
      "pull_request_id",
      "repo_id",
      "pr_review_author_association",
      "pr_review_state",
      "pr_review_body",
      "pr_review_submitted_at",
      "pr_review_src_id",
      "pr_review_node_id",
      "pr_review_html_url",
      "pr_review_pull_request_url",
      "pr_review_commit_id",
      "platform_id",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "cntrb_id"
    ],
    "description": "Contains code review feedback on pull requests, separated by repo_id."
  },
  "pull_requests": {
    "columns": [
      "pull_request_id",
      "repo_id",
      "pr_url",
      "pr_src_id",
      "pr_src_node_id",
      "pr_html_url",
      "pr_diff_url",
      "pr_patch_url",
      "pr_issue_url",
      "pr_augur_issue_id",
      "pr_src_number",
      "pr_src_state",
      "pr_src_locked",
      "pr_src_title",
      "pr_body",
      "pr_created_at",
      "pr_updated_at",
      "pr_closed_at",
      "pr_merged_at",
      "pr_merge_commit_sha",
      "pr_teams",
      "pr_milestone",
      "pr_commits_url",
      "pr_review_comments_url",
      "pr_review_comment_url",
      "pr_comments_url",
      "pr_statuses_url",
      "pr_meta_head_id",
      "pr_meta_base_id",
      "pr_src_issue_url",
      "pr_src_comments_url",
      "pr_src_review_comments_url",
      "pr_src_commits_url",
      "pr_src_statuses_url",
      "pr_src_author_association",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "pr_augur_contributor_id"
    ],
    "description": "Stores pull request-level data including merge timestamps, status, author info, and diff URLs. Core to measuring collaboration and merge activity. Separated by repo_id."
  },
  "repo": {
    "columns": [
      "repo_id",
      "repo_group_id",
      "repo_git",
      "repo_path",
      "repo_name",
      "repo_added",
      "repo_type",
      "url",
      "owner_id",
      "description",
      "created_at",
      "forked_from",
      "updated_at",
      "repo_archived_date_collected",
      "repo_archived",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "repo_src_id"
    ],
    "description": "Main table for repository metadata including name, URL, primary, and project ownership. Central for most repo-level queries. Stores by repo_name and repo_id"
  },
  "repo_dependencies": {
    "columns": [
      "repo_dependencies_id",
      "repo_id",
      "dep_name",
      "dep_count",
      "dep_language",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ]
  },
  "repo_deps_libyear": {
    "columns": [
      "repo_deps_libyear_id",
      "repo_id",
      "name",
      "requirement",
      "type",
      "package_manager",
      "current_verion",
      "latest_version",
      "current_release_date",
      "latest_release_date",
      "libyear",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ],
    "description": "Tracks dependency versions and release timelines to calculate libyear technical debt. Useful for security and maintenance queries."
  },
  "repo_deps_scorecard": {
    "columns": [
      "repo_deps_scorecard_id",
      "repo_id",
      "name",
      "score",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date",
      "scorecard_check_details"
    ]
  },
  "repo_groups": {
    "columns": [
      "repo_group_id",
      "rg_name",
      "rg_description",
      "rg_website",
      "rg_recache",
      "rg_last_modified",
      "rg_type",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ],
    "description": "Defines repository collections by name and type. Often used to group CNCF projects or organizational segments."
  },
  "repo_info": {
    "columns": [
      "repo_info_id",
      "repo_id",
      "last_updated",
      "issues_enabled",
      "open_issues",
      "pull_requests_enabled",
      "wiki_enabled",
      "pages_enabled",
      "fork_count",
      "default_branch",
      "watchers_count",
      "UUID",
      "license",
      "stars_count",
      "committers_count",
      "issue_contributors_count",
      "changelog_file",
      "contributing_file",
      "license_file",
      "code_of_conduct_file",
      "security_issue_file",
      "security_audit_file",
      "status",
      "keywords",
      "commit_count",
      "issues_count",
      "issues_closed",
      "pull_request_count",
      "pull_requests_open",
      "pull_requests_closed",
      "pull_requests_merged",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ],
    "description": "Holds summarized metadata per repo like number of issues, stars, forks, and pull requests. Useful for summary statistics and comparisons. Separated by repo_id."
  },
  "repo_labor": {
    "columns": [
      "repo_labor_id",
      "repo_id",
      "repo_clone_date",
      "rl_analysis_date",
      "programming_language",
      "file_path",
      "file_name",
      "total_lines",
      "code_lines",
      "comment_lines",
      "blank_lines",
      "code_complexity",
      "repo_url",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ],
    "description": "Estimates coding effort per repo using lines of code and complexity metrics. Helpful for productivity or labor cost modeling, and programming language of project. Separated by repo_id."
  },
  "repo_meta": {
    "columns": [
      "repo_id",
      "rmeta_id",
      "rmeta_name",
      "rmeta_value",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ]
  },
  "repo_stats": {
    "columns": [
      "repo_id",
      "rstat_id",
      "rstat_name",
      "rstat_value",
      "tool_source",
      "tool_version",
      "data_source",
      "data_collection_date"
    ]
  }
}